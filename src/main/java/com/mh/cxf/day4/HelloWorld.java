package com.mh.cxf.day4;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.2
 * 2014-11-16T10:57:15.112+08:00
 * Generated source version: 3.0.2
 * 
 */
@WebService(targetNamespace = "http://day1.cxf.mh.com/", name = "HelloWorld")
@XmlSeeAlso({ObjectFactory.class})
public interface HelloWorld {

    @RequestWrapper(localName = "sayHiToUser", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.SayHiToUser")
    @ResponseWrapper(localName = "sayHiToUserResponse", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.SayHiToUserResponse")
    @WebMethod(operationName = "sayHiToUser")
    public Response<com.mh.cxf.day4.SayHiToUserResponse> sayHiToUserAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        com.mh.cxf.day4.User arg0
    );

    @RequestWrapper(localName = "sayHiToUser", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.SayHiToUser")
    @ResponseWrapper(localName = "sayHiToUserResponse", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.SayHiToUserResponse")
    @WebMethod(operationName = "sayHiToUser")
    public Future<?> sayHiToUserAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        com.mh.cxf.day4.User arg0,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<com.mh.cxf.day4.SayHiToUserResponse> asyncHandler
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "sayHiToUser", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.SayHiToUser")
    @WebMethod
    @ResponseWrapper(localName = "sayHiToUserResponse", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.SayHiToUserResponse")
    public java.lang.String sayHiToUser(
        @WebParam(name = "arg0", targetNamespace = "")
        com.mh.cxf.day4.User arg0
    );

    @RequestWrapper(localName = "getUsers", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.GetUsers")
    @ResponseWrapper(localName = "getUsersResponse", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.GetUsersResponse")
    @WebMethod(operationName = "getUsers")
    public Response<com.mh.cxf.day4.GetUsersResponse> getUsersAsync();

    @RequestWrapper(localName = "getUsers", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.GetUsers")
    @ResponseWrapper(localName = "getUsersResponse", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.GetUsersResponse")
    @WebMethod(operationName = "getUsers")
    public Future<?> getUsersAsync(
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<com.mh.cxf.day4.GetUsersResponse> asyncHandler
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getUsers", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.GetUsers")
    @WebMethod
    @ResponseWrapper(localName = "getUsersResponse", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.GetUsersResponse")
    public com.mh.cxf.day4.IntegerUserMap getUsers();

    @RequestWrapper(localName = "sayHi", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.SayHi")
    @ResponseWrapper(localName = "sayHiResponse", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.SayHiResponse")
    @WebMethod(operationName = "sayHi")
    public Response<com.mh.cxf.day4.SayHiResponse> sayHiAsync(
        @WebParam(name = "text", targetNamespace = "")
        java.lang.String text
    );

    @RequestWrapper(localName = "sayHi", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.SayHi")
    @ResponseWrapper(localName = "sayHiResponse", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.SayHiResponse")
    @WebMethod(operationName = "sayHi")
    public Future<?> sayHiAsync(
        @WebParam(name = "text", targetNamespace = "")
        java.lang.String text,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<com.mh.cxf.day4.SayHiResponse> asyncHandler
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "sayHi", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.SayHi")
    @WebMethod
    @ResponseWrapper(localName = "sayHiResponse", targetNamespace = "http://day1.cxf.mh.com/", className = "com.mh.cxf.day4.SayHiResponse")
    public java.lang.String sayHi(
        @WebParam(name = "text", targetNamespace = "")
        java.lang.String text
    );
}
